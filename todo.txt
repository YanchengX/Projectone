@代表已設計。
#補充設計
System requirement:
@介面有a員工列窗，b員工調整窗(#b-1員工歷史薪資)，c分析數據列窗
-
@選擇列有d設定參數窗，e總試算窗，
-
@a員工列窗表格顯示該當月月薪試算
-
@使用a員工列點擊選擇員工可以在b員工調整窗調整參數且顯示c分析數據窗
-
@可以在b員工調整窗手動輸入當月月薪計算值
-                                                                                                                           
@b員工調整窗被點擊會顯示該員工前6個月薪水明細跟當月明細，且可調整參數與查看所有該員工薪水紀錄
-

d設定列窗可以調整勞健保參數(調薪問題   比例%)，新增刪除薪水計算項目，修改固定獎金等等項目
-
e試算窗可以查看該月總薪水及圖表顯示，可以調整為本月，近半年，全部
-
本月結算功能按鍵，確定當月已經結束完成點擊按鍵成以往薪資內容不得再修改且新增該月薪水資訊已供下個月輸入
-
員工可設定分為正職，工讀
-
b員工調整窗可以有套用鍵使用當月全勤再利用細項調整是否請假等等計算並列出薪資條較為方便
b員工調整窗點擊當月薪資可以list出當月每天狀況且做修改並有上述套用鍵
-
在d設定列窗作調整員工新增或刪除選項，並作初始輸入或刪除該員工離職薪水計算，但數據依舊保留。
-
薪資項目要求(正職本土，工讀):



System design:

----------------------操作邏輯

原始手作邏輯算法:
(全都無條件進位)
照打卡單上正職:
正常流程:
+
一天到打一個O，算完代表全勤就 = 該月月薪 8:00~16(8hour) 對應薪資條基本月薪 25250
(如果有請假不會在這裡調整會用減項，較為直觀且才能合理推算加班時薪基數

伙食津貼也是對著O全勤補一天60(總和該月上班日)
全勤獎金，開門，責任獎金(固有且無變數)
其他項目可設定
- 
勞保 11.5% * 0.2 * 月薪
健保 5.17% * 0.3 * 月薪
請假 月薪 / 8 / 30 * 正職缺少時數
借支 (多少錢)
代訂伙食費(天數 * 60)

= 一般日總計

然後算加班後再總和

加班:前兩小時加成 = 月薪/8/30 * 1.34
    :後加成      = 月薪/8/30 * 1.67
加班伙食費(晚上) =天數*60

禮拜六加班 一樣前1.34後1.67 + 伙食 60*天數
禮拜天加班 一樣且 + 一天特假 + 伙食*天數
國定跟禮拜天一樣只是沒有多特假
+其他變數(可設定)
一般 + 加班條 = 該月薪水

公司勞退 =  月薪/0.06


需求與目標:
節省計算時間，以及薪資電子化

使用該app流程:
使用者在原有打卡機計算薪資條所有數字後計上薪資條變作為

使用者只要透過在app點選全勤或是自行輸入時間完就可以套用薪資條且算出薪水
並可以顯示跟儲存數據。

使用者填入細項:
對著該員工打卡單

應該填入底薪(一次就可)，請假時間(是否為特休(扣薪)跟取消全勤)，
伙食天數(加班，休息，例假，國定)，
加班計算(1.34時數 + 1.67時數 + 假日天數)，開門加給

代購便當 -(正職平日天)天數

調整項 該員工
借支

事件狀況:



月薪全勤 沒全勤
時新工讀計算 
有請假 
有借錢
便當處理 
責任獎金
加班時數計算

----------------------畫面view安排
左一Treeview畫面    右 薪資數字調整
左二員工基本設定     

mainwidget

widget
員工資料總列窗show
    每位員工基本資料顯示  "treeview"
    薪水總金額數         "Label"
widget
員工資料調整窗basic_set
    顯示該員工基本資料  "Label" "Line input"
    修改鍵 完成鍵       "button"
widget
員工薪資設定窗account
    顯示薪資條項目跟金額 "Label" "Line input"
    新增按鍵 修改按鍵 刪除按鍵 預覽報表 "button"

menubar

widget
基本參數設定窗value_set
    顯示基本數據項 "label" "Line input"
    修改鍵        "button
widget
員工歷史資料窗ehistory
    選擇員工檢視   "combobox"
    顯示該員工歷年薪水資料 "Treeview"
    薪水細節    "widget"
widget
公司歷史資料窗chistory
    ""暫定
----------------------畫面事件邏輯

mainviewy事件處理:
    #show_undoview:
        列表undo listview 顯示還未登記薪資的員工
        method:
            basicinfo -> salarychecked = 0  (False 尚未新增該月該員工月薪)

    #undoview_clicked:
        當undoview員工被點擊，跑對應數值到該mainview所有對應line-edit上 可開始修改
        mothod:
            model:
            undoview_clicked -> return basicinfo data
            view:
            show data in edit_view and basicsalary grid and set 0 and set other line text default 0    
            controller:
            #if controller = this
            call model.data (which mean get model.emit(signal or setString(listmodel)))
    
    #infodata_edit_clicked:
        基本資料修改按鈕，原本基本資料為disable不可更改的，按下編輯按鍵可以開放更改，再按一次無效
        info_edit_click pysignal不回傳值 單純點擊事件 切換listview員工時再度disabled
        
        暫定修改infoedit新增時間性修改成功label
    
    #infodata_done_clicked:
        基本資料完成按鈕，當被點擊儲存當前設定並分配好對應型態回到DB，並將line-edit改回disable
        info_done_click pysignal(list)並設定回DB型態，依照eid的text對應db + 該eid data eid做update 如果eid為eid(default)預設值就跳errorr
        先從view抓數值回去model model do update 回傳emit(對應data)，(qt會隨著使用者輸入line edit跟著變動text值)
        DB更改之後未作新渲染，所以要利用emit回傳信號給view，重新更新一次infodata(select)就會更新渲染畫面。
    
    #account_and_edit_clicked:
        試算修改按鈕，ACCount表格輸入完畢時可以按鈕幫忙計算不須手動計算的按鈕並可提供修改(不設定disable)
        model建立所以需要的變數26項，並配置對應自動計算格上，傳遞資料來完成計算。但還不做DB操作
        auto格上的可以是自動計算也可以手動上再做edit。
        M-
            建立26項函數並綁定signal(accountdata)(list) or *(tuple)
            model作函數的計算並綁定emit 回傳自動計算value
        V-
            button connect 該controller 並丟回使用者輸入的參數
            渲染自動更新項 給使用者看全部資訊。
        C-  
            呼叫model參數並附從view過來的參數xxx()
        並try 防呆以防輸入錯誤。
        信號週期signal -> 設定pysignal -> when event -> 信號綁定connect渲染處理方法 -> xx.emit(傳送訊號) ->記得disconnect已結束連接

        (問題)auto項input放最後面 -> 使用者任意調整時 總total還是要再算一遍
        -> total 隨項改方法

    getdate:
        獲得日期方法，並做年數遞增跟月份判斷(自己預設初始值)    

    create_account_clicked:
        新增試算按鈕，連動doneview 當完成時就刷新且載入done-view 並存入DB，在計算label總金額func
        model:
            model 分別做DB儲存 跟 signal(str) 回傳跟undoview一樣的形式並加上薪水於doneview
        view:
            view 丟入accountdata所有資料 跟信號顯示doneview刷新
        
    delete_account_clicked:
        在doneview 選擇員工後並按下刪除按鈕後成立，未新增該月薪水的員工就防呆error

    preview_clicked:
        預覽按鈕，當被clicked時，line-edit上的值傳入格式並出產到word預覽，
        M-
            model接收line-eidt值並邏輯套用呼叫word，將value帶到裡面並產表。    


    (當月結算event)
    closed_Account:



----------------------資料庫    `

(DB)
1.
原則上所有項都要能是調整項目 所以資料庫編列正規化(代議)


員工基本資料庫:basicinfo
員工編號
員工性質
姓名
年資
特休

當月事件薪水資料庫:event

事件編號
員工編號
年分 (time)
月份 (time)
當月薪水
勞退


員工薪水資料庫:normal

    #薪資條一般日項目資料

員工編號
年分 (time)
月份 (time)
當月薪水 (參數月底薪or時薪*工時)
特休日數 
年資
+
伙食 (days * 伙食)
全勤 (全勤)
開門 (開門)
責任 (責任)
其他應領
-
勞保 (勞健保)
健保 
請假 
預支 
代訂伙食
其他應扣


加班資料庫:overtime

    #薪資條加班項目資料

key編號 
年分 time
月份 time
1.34加班    hour * (底薪/30/8) * 1.34
1.67加班    hour * (底薪/30/8) * 1.67
(加班例and假and國定日)加班伙食 (伙食*days)
休息日加班 (1.34 * 2 + 1.67 * 6)
例假日加班 一樣 + 補休
國定加班
其他+-

底薪:basicsalary.db

##每月員工每月訂製之底薪 方便結算時呼叫套用

員工編號eid
基本薪資basicsalary


固定數資料庫:value.db

##儲存一些設定時需要用的固定變數(獎金，運算)

伙食費60，
勞保費11.5%*0.2，
健保費5.17%*0.3，
開門50，
全勤1000，
責任1000
