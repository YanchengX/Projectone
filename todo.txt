@代表已設計。
#補充設計
System requirement:
@介面有a員工列窗，b員工調整窗(#b-1員工歷史薪資)，c分析數據列窗
-
@選擇列有d設定參數窗，e總試算窗，
-
@a員工列窗表格顯示該當月月薪試算
-
@使用a員工列點擊選擇員工可以在b員工調整窗調整參數且顯示c分析數據窗
-
@可以在b員工調整窗手動輸入當月月薪計算值
-                                                                                                                           
@b員工調整窗被點擊會顯示該員工前6個月薪水明細跟當月明細，且可調整參數與查看所有該員工薪水紀錄
-

d設定列窗可以調整勞健保參數(調薪問題   比例%)，新增刪除薪水計算項目，修改固定獎金等等項目
-
e試算窗可以查看該月總薪水及圖表顯示，可以調整為本月，近半年，全部
-
本月結算功能按鍵，確定當月已經結束完成點擊按鍵成以往薪資內容不得再修改且新增該月薪水資訊已供下個月輸入
-
員工可設定分為正職，工讀
-
b員工調整窗可以有套用鍵使用當月全勤再利用細項調整是否請假等等計算並列出薪資條較為方便
b員工調整窗點擊當月薪資可以list出當月每天狀況且做修改並有上述套用鍵
-
在d設定列窗作調整員工新增或刪除選項，並作初始輸入或刪除該員工離職薪水計算，但數據依舊保留。
-
薪資項目要求(正職本土，工讀):



System design:

----------------------操作邏輯

原始手作邏輯算法:
(全都無條件進位)
照打卡單上正職:
正常流程:
+
一天到打一個O，算完代表全勤就 = 該月月薪 8:00~16(8hour) 對應薪資條基本月薪 25250
(如果有請假不會在這裡調整會用減項，較為直觀且才能合理推算加班時薪基數

伙食津貼也是對著O全勤補一天60(總和該月上班日)
全勤獎金，開門，責任獎金(固有且無變數)
其他項目可設定
- 
勞保 11.5% * 0.2 * 月薪
健保 5.17% * 0.3 * 月薪
請假 月薪 / 8 / 30 * 正職缺少時數
借支 (多少錢)
代訂伙食費(天數 * 60)

= 一般日總計

然後算加班後再總和

加班:前兩小時加成 = 月薪/8/30 * 1.34
    :後加成      = 月薪/8/30 * 1.67
加班伙食費(晚上) =天數*60

禮拜六加班 一樣前1.34後1.67 + 伙食 60*天數
禮拜天加班 一樣且 + 一天特假 + 伙食*天數
國定跟禮拜天一樣只是沒有多特假
+其他變數(可設定)
一般 + 加班條 = 該月薪水

公司勞退 =  月薪/0.06


需求與目標:
節省計算時間，以及薪資電子化

使用該app流程:
使用者在原有打卡機計算薪資條所有數字後計上薪資條變作為

使用者只要透過在app點選全勤或是自行輸入時間完就可以套用薪資條且算出薪水
並可以顯示跟儲存數據。

使用者填入細項:
對著該員工打卡單

應該填入底薪(一次就可)，請假時間(是否為特休(扣薪)跟取消全勤)，
伙食天數(加班，休息，例假，國定)，
加班計算(1.34時數 + 1.67時數 + 假日天數)，開門加給

代購便當 -(正職平日天)天數

調整項 該員工
借支

電子化系統操作步驟:

#main page
    a.
    開始系統時可點擊or point enter listview來查看該員工基本資料頁面and薪資試算頁面
    但可輸入欄都設為disable
    a-1.
    點擊listview頁面後顯示basicinfo(diable edit) and account page(able edit)

#basicinfo page
    b-1.
    調整必須點擊edit button (所以要diable done button)
    b-2.
    更改資料完畢可以點擊done button並開放account page輸入，且更改中acccount page不能做更動(diable)(防止兩邊同時操作影響底薪)
    #**(發現更改名字問題setting page未refresh變動)eid,eproperty, laborpension, specialdayoff
        undoview 要refresh
account page
    c
    #(照隨改隨算event)c為點擊員工後弟一個看到的狀況分為未登錄跟已登錄(直接顯示薪水on listview)
    一般總和，加班總和，勞退，本月薪水都為disable其餘可調整
    c-未登錄(salarychecked==0).
    未登入員工
    able(account page,create/update button)，(check判斷要哪個button disable to click) 防呆 account-guide-check
    c-已登錄(salarychecked==1).
    已登錄員工
    able(account page, create/update button, delete button, preview button(如果尚未update=(資料庫未更新)就會顯示舊的))


月薪全勤 沒全勤
時新工讀計算 
有請假 
有借錢
便當處理 
責任獎金
加班時數計算

----------------------畫面view安排
左一Treeview畫面    右 薪資數字調整
左二員工基本設定     

mainwidget

widget
員工資料總列窗show
    每位員工基本資料顯示  "treeview"
    薪水總金額數         "Label"
widget
員工資料調整窗basic_set
    顯示該員工基本資料  "Label" "Line input"
    修改鍵 完成鍵       "button"
widget
員工薪資設定窗account
    顯示薪資條項目跟金額 "Label" "Line input"
    新增按鍵 修改按鍵 刪除按鍵 預覽報表 "button"

menubar
新增-新增員工   設定-參數設定   資料庫-總歷史資料，員工歷史資料

widget
新增員工窗new_emp_view
    員工基本資訊 "label" "Line input"
    新增鍵        "button"
widget
參數設定窗value_set_view
    顯示基本數據項 "label" "Line input"
    修改鍵        "button
widget
總歷史資料窗thistory_view
    選擇年分   "combobox"
    顯示該年每月薪水資料 "Treeview"
widget
員工歷史資料窗ehistory_view
    選擇員工檢視   "combobox"
    顯示該員工歷年薪水資料 "Treeview"
    薪水細節    "widget"
widget
公司歷史資料窗chistory
    ""暫定
----------------------畫面事件邏輯
# ->done

mainviewy事件處理:
    #show_undoview:
        列表undo listview 顯示還未登記薪資的員工
        method:
            basicinfo -> salarychecked = 0  (False 尚未新增該月該員工月薪)


    #undoview_clicked:
        當undoview員工被點擊，跑對應數值到該mainview所有對應line-edit上 可開始修改
        mothod:
            model:
            undoview_clicked -> return basicinfo data
            view:
            show data in edit_view and basicsalary grid and set 0 and set other line text default 0    
            controller:
            #if controller = this
            call model.data (which mean get model.emit(signal or setString(listmodel)))

        #尚未對應已經新增的值當click時所該值對應到line-edit上
        #尚未對應還未新增的值當click時default值對應到line-edit


    #infodata_edit_clicked:
        基本資料修改按鈕，原本基本資料為disable不可更改的，按下編輯按鍵可以開放更改，再按一次無效
        info_edit_click pysignal不回傳值 單純點擊事件 切換listview員工時再度disabled

        #暫定修改infoedit新增時間性的修改成功label -> 改為qbox更改成功infomation
    

    #infodata_done_clicked:
        基本資料完成按鈕，當被點擊儲存當前設定並分配好對應型態回到DB，並將line-edit改回disable
        info_done_click pysignal(list)並設定回DB型態，依照eid的text對應db + 該eid data eid做update 如果eid為eid(default)預設值就跳errorr
        先從view抓數值回去model model do update 回傳emit(對應data)，(qt會隨著使用者輸入line edit跟著變動text值)
        DB更改之後未作新渲染，所以要利用emit回傳信號給view，重新更新一次infodata(select)就會更新渲染畫面。


    #account_and_edit_clicked:
        試算修改按鈕，ACCount表格輸入完畢時可以按鈕幫忙計算不須手動計算的按鈕並可提供修改(不設定disable)
        model建立所以需要的變數26項，並配置對應自動計算格上，傳遞資料來完成計算。但還不做DB操作
        auto格上的可以是自動計算也可以手動上再做edit。
        M-
            建立26項函數並綁定signal(accountdata)(list) or *(tuple)
            model作函數的計算並綁定emit 回傳自動計算value
        V-
            button connect 該controller 並丟回使用者輸入的參數
            渲染自動更新項 給使用者看全部資訊。
        C-  
            呼叫model參數並附從view過來的參數xxx()
            並try 防呆以防輸入錯誤。
            信號週期signal -> 設定pysignal -> when event -> 信號綁定connect渲染處理方法 -> xx.emit(傳送訊號) ->記得disconnect已結束連接

        (問題)auto項input放最後面 -> 使用者任意調整時 總total還是要再算一遍
        -> total 隨項改方法
        (暫不處理)


    #getdate:
        獲得日期方法，並做年數遞增跟月份判斷(自己預設初始值)    

    #create_account_clicked:(update)
        v0:新增試算按鈕，連動listview 當(無錯誤輸入)則進行DB處理(input薪水+checked判斷)並重新刷新listview(show view)
        v1:如果新增過後又click button可以做update input DB process 並重複動作
        model:
            (create)
            model 分別做DB儲存 然後跟listview一樣的形式並加上(薪水 + checked已計算 (join eventdata))
            DB -> 新增一次 需分辨唯一(eid + year + month)除非刪除後再新增
            insert -> eventdata, normal, overtime,
            caseid再做邏輯判斷，假設新增按鈕進來的資料eid & year & month == unique 才給新增並caseid+1:
            那必須就有東西紀錄eid,year,month -> eventdata上 假設三個都不再eventdata上就可以+1並insert data
            記得caseid 跟 salarychecked連動
            self.caseid = 目前(DB的)caseid長度-1
            input(薪水資料) -> DB(event,normal,overtime) 確認eventdata為唯一並insert and caseid+1
            -> DB(info) salary_checked改為True from該點觸員工eid input
            資料連動存入 eventdata(薪資事件+薪水) + normal(一般項db) + overtime(加班項db)
            (update)
        view:
            (create)
            對應到顯示資料showview上面的show -> strdata to show
            查basic join eventdata(當月的都會是唯一不會有狀況)
            如果已登錄(salary_checked = T) 就顯示salary(from eventdata)
            如果未登錄就(return '未登錄')
            (update)

            1.
            button clicked if 已登錄 and 資料有更動並進行update
            2.
            if 已登錄但還沒input 就新create
            3.
            if 未登錄就default value and return view


    #delete_account_clicked:
        在listview 選擇員工後並按下刪除按鈕後成立，未新增該月薪水的員工就防呆error
        signal -> delete_click return 該eid 
            model > 已經選擇員工之下，input進來的對該eid,year,month刪除
            (basicinfo-> salarychecked 改回0(False))
            (eventdata, normal, overtime ->eid year month做key刪除資料)
            control > 接收view put回來的資料傳到model
            view > 透過line-edit 跟該當年月跟點到的哪個員工，呼叫controller傳入使用者操作資料
            最後messagebox出已刪除
            ->並更新account回到預設值
            #account-detail item refresh


    #sumtotal:
        計算員工總新水，跟(show)listview抓資料把已新增的薪水相加，listview刷新時每次都會呼叫sum
        
        model -> listview只負責顯示資料，當薪水更新的時候每次都要呼叫show-view，model負責從model show view拿資料
                (因為每次更新資料就會call一次)，
        control - > 抓view資料
        view ->  view label 要恆動計算(或是每次變數字時連帶呼叫(新增and刪除))，並之後當月計算從薪給算，
        
        1恆動 -> (設置永動器到程式關閉為止，數值存入以便下一次呼叫)
        #2更動時跟著計算 ->(新增或刪除時呼叫並渲染label跟存入數值)
        採2方法


    #listview_clicked2:

        當點到listview時，如果已新增過薪水的話就讓account顯示已經登記過的資料到line上，反之則顯示(default)(0)並可以開始輸入
        model -> qindex找到對應eid資料，並join DB(eventdata, normal, overtime)給account套用並改值回傳(多層left join)
        control -> 接收過渡資料
        view -> 接收該qindex，並給該eid，然後在更新畫面到account上，
        預設與新增過的判斷式為eventdata有沒有該事件，如果用basicinfo其實沒有該員工問題就不會顯示在listview上，所以用event代表新增


    #default_set:
        初始畫面載入設定，將可輸入值設為disable，


    #account-guide-check:
        幫助點擊員工時判斷是否新增過薪水且做按鈕防呆引導(從view-click獨立出來)
        account guide check base on listview clicked當下做動
        M-
            依附view click時呼叫且新增引導signal做回覆與抓取qindex值，select 該員工的salary_checked，並回傳值判斷
            c-未登錄(salarychecked==0).
            able(account page,create/update button)
            c-已登錄(salarychecked==1).
            able(account page, create/update button, delete button, preview button(如果尚未update=(資料庫未更新)就會顯示舊的))

            click list view選擇員工時(該表is clicked) 然後對照click到的員工做salarychecked對應做切換，*如果都沒有選擇員工時就是
            default disable
        C-
            controller呼叫方法 參數依附view click的eid 回傳emit
        V-
        
            回收到的值做更改disable or able值(button Enabled())
            (切換狀況):
            a.尚未click點到任何一員工:
                切換到該員工checked狀態0 (update/create) ,1 (delete,preview,update/create)
            b.已登錄員工跳至尚未登錄員工:
                able item to disable (delete,preview) - disable item to able (None but update/create non-change)
            c.未登錄員工跳至已登錄員工:
                able item to disable (None but update/create non-change) - disable item to able (delete, preview)

            成功更新變成0,1時要從新判斷該salarychecked同時切換按鈕able/disabl否則會誤按
            (delete/create)會影響到
            ------------------------------
            account-edit able and disable
            -
            info-edit able and disable
            -
            account and info button able and disable
            -----------------------------


    #auto_counting_event:
        使用者計算右側account page時輸入完數字且tab到下個數字時(或不規則輸入)，自動計算項已經計算完
        
        list-view 被點擊時 account-page顯示試算資料(未登錄=0已登錄=DBdata)
        未登錄計算時，自動計算項(全勤，勞健保(able)，一般and加班總合，勞退 總薪水(disable))
        
        (able logic，且可自由更改)
        全勤 => 請假=0就計算
        勞健保 => 基本底薪*參數
        
        (disable logic)
        其餘參數輸入過後跳往其他linetext時進行計算
        一般總和 => 基本底薪+一般項，假設其中一個linetext更動時就update一般總和，第一次點擊員工時先執行一次
        加班總和 => 加班項其中一個linetext更動時update加班總和，第一次點擊員工執行一次
        本月薪水 => 一般and加班有變動時就更新
        text-valuechanged function處理變更時refresh sum

        function可放在兩種方案
        v1.
        app打開來listview點選員工時(click_emp)->順勢呼叫+connect valuechanged
        2.
        試算按鍵改成輸入按鍵(意旨打開程式時account-page都為disable，點開才開放輸入)，這時套入function進行計算

        將原本account試算功能保留邏輯移到auto counting event 並新增自動計算

        M ->
            回收dictionary-data 做邏輯加總，一般項的總和emit 跟加班項的emit 最後總薪水emit
            try防呆是否為數值 false就不做計算(or 總計顯示err)
            
            假設auto-count item被手動計算，那就再放回總數。

            (solve)重複輸入時會重複計算bug
        V ->
            當view is click 啟動
            auto-counting -> all line-edit textchanged connect -> account-function
            accout-function:
                dictionary data(所有加總) to controller
                self.model.信號連接.(sum_change)
            sum_change:
                line-edit .變更emit綁定的資訊
            進行delete時auto-count 無法歸零是因為basicsalary!=0 所已經幫忙計算(不會影響邏輯)
            bug -> able調整項邏輯輸入設定 -> (或直接變為disable)
        C->
            連接M and V橋梁，傳遞dictionary-data


    list-view-unclick-default:
        當create or delete完成時，list-view會回到unclick狀態 這時候將info, account and all button改為預設值


    preview_clicked:
        預覽按鈕，當被clicked時，line-edit上的值傳入格式並出產到word預覽，
        M-
            model接收line-eidt值並邏輯套用呼叫word，將value帶到裡面並產表。    
            doct(Previw)做word畫面雕刻接收<年，月，output資料(dict)，將dict數值都套上對應表格並做邊界與框架距離調整
            當預覽button點擊則生成word(或是直接叫做生成word檔) save.doc，生成並預覽(開啟word)->open該eid_month_year.docx(命名方式)
            signal_preview純通知該eid已生成word檔案
            抓資料都在model 全部join包所有數值並傳輸
            然後再丟給執行class (Preview)接收
        Preview(docpy)-
            拿到資料做init 並設計模板，再將數值套入，當pre_button時啟動預覽並save func

        V-
            預覽按鈕button連接preview 該方法connect signal(Preview)->show收訊eid以生成word input dict資料 年月連接controller
        C-
            preview連接view傳給model input進來的資料


    closed_Account:
        該月薪資結算並將資料更新到下個月份以及調整DB內容等等。
        bug-> 目前利用到salarychecked邏輯判斷的有
            show-undoview -> show listview if 已登錄就show salary
            account_guide_checked -> 引導button點擊event
            create_account_clicked -> 新增account event
            delete_account_clicked -> 刪除account event
        DB problem->
            salarychecked 黏在basicinfo上 -> 如果要選擇其他年月份時要跟著判斷當時是否有登錄 -> 就要新增DB判斷
            new sheet -> (eid year month salarychecked)
            checked in basicinfo -> salarychecked刪除 留剩完整資訊
        model-
            closed-account:
                按下結算時紀錄當月份eid year month salarychecked (該月薪資資料不用，如果create了就已經將eid data存入)並將year month 進程
                #salarychecked另開一個db sheet
            其他event:
                配合新DB並記錄 但保持原有邏輯紀錄以便判斷邏輯並確保已經做更改
                sequence -> create, show view, guide checked, delete
                \
                #create_account_clicked
                #show-undoview
                #account_guide_checked 
                #delete_account_clicked 
                @caseid 邏輯可以用stack處理
            
        view-
            reset to default view and recall listview
            呼叫所有default set or 乾脆重新開啟

    #comboboxshow:
        get year, month have been history-> show on combobox
        

    #datecombox_event(selectdate):
        click combox事件，當選定目標年月份就更改year and month並顯示完整該年月份資料
        
        model-
            收到目標年月就更改year month來顯示該月份資料
        view-
            return currentIndex ->
            判斷是否為最後一個然後able/disable 結算button


    select_date_event:
        一個or兩個按鈕點選顯示該月薪資檔案，以方便回朔對資料
        model-
            傳送event(set of year and month) to combobox顯示
            接收到view的年月 回朔到該年月，如果已經按了當月結算回朔的月份不能再按單月結算 且對應closeAccount event
            db連結該年該月的資料 並更改year month

            DB connect -> eid year month(show view->) unique id
            salarychecked -> salary data
            (此邏輯代表過去結算不予補計?or not)
            (使用者如果要回到當前就要點回最後一次的year month)
        view-
            接收所有已登錄年月 show on combobox
            combobox event->
            判斷是否為最後一個然後able/disable 結算button



------
    #bug -> 如果要可行回朔，回到該月份判斷之時 salarychecked已被close event更新成未登錄，導致回朔前月份之際會無法顯示
            -> DB進行調整強化，或是找其他輸入點進行回朔判斷。
------


subclass-

    new_emp_view    
        model-
            try 新增員工輸入資料，假設重複就err，input DB
        view-
            input 資料，and information show 完成
    delete_emp_view
        model-
            如同new
    value_set_view 
        model-
            更改db value 資料
        view-
            新增完成
    emp-history
        員工歷史紀錄查詢可以選擇各employee來特別顯示從登陸薪資至今的紀錄以及圖表顯示
        model-
        
    com-history     
        公司總薪水紀錄，從登陸薪資開始所有總薪資紀錄，以及各職員占比以及月薪水支出圖表
        model-


main-list ->

    #員工編輯完成,刪除acc,新增error作qmesbox提示使用者
    #account預設畫面調整
    #view-clicked 套用已新增or預設資料到account edit上
    #sumtotal Label計算總薪水 ->從list上已算出新水上抓資料相加
    #Tab按鍵順位調整，
    #main page 可否輸入框判斷修改
    #防呆引導按鈕限制避免err邏輯實現     
        #1.account guide 防呆引導event
        #2.info page guide check
        #3.更新or刪除完view會跳回到unclick,回預設button設定
    #進行更改自動計算項 (更新成隨改隨算event 取代試算event)
    #create/update button event合併更新與新增事件
    #當月close account 處理，解決salary_checked邏輯問題(變為可依按照年月份更動)


preview_clicked 預覽成word技術 + 應用
select-date event(combobox) -> 可選擇跳至任何已記錄年月份薪資



subclass-list ->
--------------------------
    #子畫面view呼叫triggered -> menubar
新增刪除員工view完成 ->new_emp_clicked新增刪除員工in DB
設定-參數設定窗value_set_view   -> done_clicked 
資料庫-總歷史資料show 
員工歷史資料
(手動viersion完成)



----------------------資料庫    

(DB)
1.
原則上所有項都要能是調整項目 所以資料庫編列正規化(代議)


員工基本資料庫:basicinfo
員工編號
員工性質
姓名
年資
特休

當月事件薪水資料庫:event

事件編號
員工編號
年分 (time) 
月份 (time)
當月薪水
勞退


員工薪水資料庫:normal

    #薪資條一般日項目資料

員工編號
年分 (time)
月份 (time)
當月薪水 (參數月底薪or時薪*工時)
特休日數 
年資
+
伙食 (days * 伙食)
全勤 (全勤)
開門 (開門)
責任 (責任)
其他應領
-
勞保 (勞健保)
健保 
請假 
預支 
代訂伙食
其他應扣


加班資料庫:overtime

    #薪資條加班項目資料

key編號 
年分 time
月份 time
1.34加班    hour * (底薪/30/8) * 1.34
1.67加班    hour * (底薪/30/8) * 1.67
(加班例and假and國定日)加班伙食 (伙食*days)
休息日加班 (1.34 * 2 + 1.67 * 6)
例假日加班 一樣 + 補休
國定加班
其他+-

底薪:basicsalary.db

##每月員工每月訂製之底薪 方便結算時呼叫套用

員工編號eid
基本薪資basicsalary


固定數資料庫:value.db

##儲存一些設定時需要用的固定變數(獎金，運算)

伙食費60，
勞保費11.5%*0.2，
健保費5.17%*0.3，
開門50，
全勤1000，
責任1000


normalmeals
openbouns
responsiblebouns
otherplus
dayoff
borrow
mealcall  
otherminus 
#-------normal
normalfirstovertime
normalsecondovertime
normalovertime_meals
saturdayovertime
saturdayovertime_meals
sundayovertime
sundayfovertime_meals
specialovertime
specialovertime_meals
overtimeother 
#-------ovetime
allrbouns
workerfee
healthfee
normaltotal
overtimetotal
laborpension
total_salary
    #-------autoItem



已知bug整理:
    首次click listiview介面自動運算沒有更動

